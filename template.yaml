---
apiVersion: v1
kind: Template
metadata:
  name: hadoop
  annotations:
    description: A template for creating a complete Hadoop cluster
    tags: hadoop,instant-app
parameters:
- name: APP_HOST_NAME
  description: The DNS name this application will be exposed on
  value: hadoop.nna.nb.no
- name: FRONTEND_SCHEME
  description: Which scheme should be exposed in links to self
  value: https
- name: HADOOP_IMAGE
  description: Name of the Hadoop HDFS image
  value: 192.168.1.5:5001/octest/hadoop
- name: HADOOP_NAMENODE_NAME
  description: master name used as a service name and a selector
  generate: expression
  from: "hadoop-namenode-[a-z0-9]{4}"
  required: true
- name: HADOOP_DATANODE_NAME
  description: master name used as a service name and a selector
  generate: expression
  from: "hadoop-datanode-[a-z0-9]{4}"
  required: true
labels:
  template: hadoop-cluster-template
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: hadoop
    labels:
      name: hadoop
  spec:
    ports:
        - name: namenode-web
          protocol: TCP
          port: 50070
          targetPort: 50070
        - name: namenode-fs
          protocol: TCP
          port: 9000
          targetPort: 9000
    selector:
      name: ${HADOOP_NAMENODE_NAME}
    portalIP: ''
    type: ClusterIP
    sessionAffinity: None
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${HADOOP_NAMENODE_NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 120
    triggers:
    - type: ConfigChange
    replicas: 1
    selector:
      name: ${HADOOP_NAMENODE_NAME}
    template:
      metadata:
        labels:
          name: ${HADOOP_NAMENODE_NAME}
      spec:
        containers:
        - name: ${HADOOP_NAMENODE_NAME}
          image: ${HADOOP_IMAGE}
          args: ["start_namenode.sh"]
          ports:
          - containerPort: 22
            protocol: TCP
          - containerPort: 7373
            protocol: TCP
          - containerPort: 7946
            protocol: TCP
          - containerPort: 9000
            protocol: TCP
          - containerPort: 50010
            protocol: TCP
          - containerPort: 50020
            protocol: TCP
          - containerPort: 50070
            protocol: TCP
          - containerPort: 50075
            protocol: TCP
          - containerPort: 50090
            protocol: TCP
          - containerPort: 50475
            protocol: TCP
          - containerPort: 8030
            protocol: TCP
          - containerPort: 8031
            protocol: TCP
          - containerPort: 8032
            protocol: TCP
          - containerPort: 8033
            protocol: TCP
          - containerPort: 8040
            protocol: TCP
          - containerPort: 8042
            protocol: TCP
          - containerPort: 8060
            protocol: TCP
          - containerPort: 8088
            protocol: TCP
          - containerPort: 50060
            protocol: TCP
          env:
          - name: FRONTEND_SCHEME
            value: "${FRONTEND_SCHEME}"
          - name: APP_HOST_NAME
            value: "${APP_HOST_NAME}"
          imagePullPolicy: IfNotPresent
        restartPolicy: Always
        dnsPolicy: ClusterFirst
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${HADOOP_DATANODE_NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 120
    triggers:
    - type: ConfigChange
    replicas: 2
    selector:
      name: ${HADOOP_DATANODE_NAME}
    template:
      metadata:
        labels:
          name: ${HADOOP_DATANODE_NAME}
      spec:
        containers:
        - name: ${HADOOP_DATANODE_NAME}
          image: ${HADOOP_IMAGE}
          args:
          - start_datanode.sh
          ports:
          - containerPort: 22
            protocol: TCP
          - containerPort: 7373
            protocol: TCP
          - containerPort: 7946
            protocol: TCP
          - containerPort: 9000
            protocol: TCP
          - containerPort: 50010
            protocol: TCP
          - containerPort: 50020
            protocol: TCP
          - containerPort: 50070
            protocol: TCP
          - containerPort: 50075
            protocol: TCP
          - containerPort: 50090
            protocol: TCP
          - containerPort: 50475
            protocol: TCP
          - containerPort: 8030
            protocol: TCP
          - containerPort: 8031
            protocol: TCP
          - containerPort: 8032
            protocol: TCP
          - containerPort: 8033
            protocol: TCP
          - containerPort: 8040
            protocol: TCP
          - containerPort: 8042
            protocol: TCP
          - containerPort: 8060
            protocol: TCP
          - containerPort: 8088
            protocol: TCP
          - containerPort: 50060
            protocol: TCP
          env:
          - name: FRONTEND_SCHEME
            value: "${FRONTEND_SCHEME}"
          - name: APP_HOST_NAME
            value: "${APP_HOST_NAME}"
          - name: HADOOP_NAMENODE_ADDRESS
            value: "${HADOOP_NAMENODE_NAME}"
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          imagePullPolicy: IfNotPresent
        serviceAccount: deployer
        restartPolicy: Always
        dnsPolicy: ClusterFirst
